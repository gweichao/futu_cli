// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Common.proto

package Common

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//返回结果
type RetType int32

const (
	RetType_RetType_Succeed    RetType = 0
	RetType_RetType_Failed     RetType = -1
	RetType_RetType_TimeOut    RetType = -100
	RetType_RetType_DisConnect RetType = -200
	RetType_RetType_Unknown    RetType = -400
	RetType_RetType_Invalid    RetType = -500
)

var RetType_name = map[int32]string{
	0:    "RetType_Succeed",
	-1:   "RetType_Failed",
	-100: "RetType_TimeOut",
	-200: "RetType_DisConnect",
	-400: "RetType_Unknown",
	-500: "RetType_Invalid",
}

var RetType_value = map[string]int32{
	"RetType_Succeed":    0,
	"RetType_Failed":     -1,
	"RetType_TimeOut":    -100,
	"RetType_DisConnect": -200,
	"RetType_Unknown":    -400,
	"RetType_Invalid":    -500,
}

func (x RetType) Enum() *RetType {
	p := new(RetType)
	*p = x
	return p
}

func (x RetType) String() string {
	return proto.EnumName(RetType_name, int32(x))
}

func (x *RetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RetType_value, data, "RetType")
	if err != nil {
		return err
	}
	*x = RetType(value)
	return nil
}

func (RetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}

//包加密算法
type PacketEncAlgo int32

const (
	PacketEncAlgo_PacketEncAlgo_FTAES_ECB PacketEncAlgo = 0
	PacketEncAlgo_PacketEncAlgo_None      PacketEncAlgo = -1
	PacketEncAlgo_PacketEncAlgo_AES_ECB   PacketEncAlgo = 1
	PacketEncAlgo_PacketEncAlgo_AES_CBC   PacketEncAlgo = 2
)

var PacketEncAlgo_name = map[int32]string{
	0:  "PacketEncAlgo_FTAES_ECB",
	-1: "PacketEncAlgo_None",
	1:  "PacketEncAlgo_AES_ECB",
	2:  "PacketEncAlgo_AES_CBC",
}

var PacketEncAlgo_value = map[string]int32{
	"PacketEncAlgo_FTAES_ECB": 0,
	"PacketEncAlgo_None":      -1,
	"PacketEncAlgo_AES_ECB":   1,
	"PacketEncAlgo_AES_CBC":   2,
}

func (x PacketEncAlgo) Enum() *PacketEncAlgo {
	p := new(PacketEncAlgo)
	*p = x
	return p
}

func (x PacketEncAlgo) String() string {
	return proto.EnumName(PacketEncAlgo_name, int32(x))
}

func (x *PacketEncAlgo) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PacketEncAlgo_value, data, "PacketEncAlgo")
	if err != nil {
		return err
	}
	*x = PacketEncAlgo(value)
	return nil
}

func (PacketEncAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{1}
}

//协议格式，请求协议在请求头中指定，推送协议在Init时指定
type ProtoFmt int32

const (
	ProtoFmt_ProtoFmt_Protobuf ProtoFmt = 0
	ProtoFmt_ProtoFmt_Json     ProtoFmt = 1
)

var ProtoFmt_name = map[int32]string{
	0: "ProtoFmt_Protobuf",
	1: "ProtoFmt_Json",
}

var ProtoFmt_value = map[string]int32{
	"ProtoFmt_Protobuf": 0,
	"ProtoFmt_Json":     1,
}

func (x ProtoFmt) Enum() *ProtoFmt {
	p := new(ProtoFmt)
	*p = x
	return p
}

func (x ProtoFmt) String() string {
	return proto.EnumName(ProtoFmt_name, int32(x))
}

func (x *ProtoFmt) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoFmt_value, data, "ProtoFmt")
	if err != nil {
		return err
	}
	*x = ProtoFmt(value)
	return nil
}

func (ProtoFmt) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{2}
}

type ProgramStatusType int32

const (
	ProgramStatusType_ProgramStatusType_None                 ProgramStatusType = 0
	ProgramStatusType_ProgramStatusType_Loaded               ProgramStatusType = 1
	ProgramStatusType_ProgramStatusType_Loging               ProgramStatusType = 2
	ProgramStatusType_ProgramStatusType_NeedPicVerifyCode    ProgramStatusType = 3
	ProgramStatusType_ProgramStatusType_NeedPhoneVerifyCode  ProgramStatusType = 4
	ProgramStatusType_ProgramStatusType_LoginFailed          ProgramStatusType = 5
	ProgramStatusType_ProgramStatusType_ForceUpdate          ProgramStatusType = 6
	ProgramStatusType_ProgramStatusType_NessaryDataPreparing ProgramStatusType = 7
	ProgramStatusType_ProgramStatusType_NessaryDataMissing   ProgramStatusType = 8
	ProgramStatusType_ProgramStatusType_UnAgreeDisclaimer    ProgramStatusType = 9
	ProgramStatusType_ProgramStatusType_Ready                ProgramStatusType = 10
	//OpenD登录后被强制退出登录，会导致连接全部断开,需要重连后才能得到以下该状态（并且需要在ui模式下）
	ProgramStatusType_ProgramStatusType_ForceLogout ProgramStatusType = 11
)

var ProgramStatusType_name = map[int32]string{
	0:  "ProgramStatusType_None",
	1:  "ProgramStatusType_Loaded",
	2:  "ProgramStatusType_Loging",
	3:  "ProgramStatusType_NeedPicVerifyCode",
	4:  "ProgramStatusType_NeedPhoneVerifyCode",
	5:  "ProgramStatusType_LoginFailed",
	6:  "ProgramStatusType_ForceUpdate",
	7:  "ProgramStatusType_NessaryDataPreparing",
	8:  "ProgramStatusType_NessaryDataMissing",
	9:  "ProgramStatusType_UnAgreeDisclaimer",
	10: "ProgramStatusType_Ready",
	11: "ProgramStatusType_ForceLogout",
}

var ProgramStatusType_value = map[string]int32{
	"ProgramStatusType_None":                 0,
	"ProgramStatusType_Loaded":               1,
	"ProgramStatusType_Loging":               2,
	"ProgramStatusType_NeedPicVerifyCode":    3,
	"ProgramStatusType_NeedPhoneVerifyCode":  4,
	"ProgramStatusType_LoginFailed":          5,
	"ProgramStatusType_ForceUpdate":          6,
	"ProgramStatusType_NessaryDataPreparing": 7,
	"ProgramStatusType_NessaryDataMissing":   8,
	"ProgramStatusType_UnAgreeDisclaimer":    9,
	"ProgramStatusType_Ready":                10,
	"ProgramStatusType_ForceLogout":          11,
}

func (x ProgramStatusType) Enum() *ProgramStatusType {
	p := new(ProgramStatusType)
	*p = x
	return p
}

func (x ProgramStatusType) String() string {
	return proto.EnumName(ProgramStatusType_name, int32(x))
}

func (x *ProgramStatusType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProgramStatusType_value, data, "ProgramStatusType")
	if err != nil {
		return err
	}
	*x = ProgramStatusType(value)
	return nil
}

func (ProgramStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{3}
}

//包的唯一标识，用于回放攻击的识别和保护
type PacketID struct {
	ConnID   uint64 `protobuf:"varint,1,req,name=connID" json:"connID"`
	SerialNo uint32 `protobuf:"varint,2,req,name=serialNo" json:"serialNo"`
}

func (m *PacketID) Reset()         { *m = PacketID{} }
func (m *PacketID) String() string { return proto.CompactTextString(m) }
func (*PacketID) ProtoMessage()    {}
func (*PacketID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}
func (m *PacketID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PacketID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PacketID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PacketID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketID.Merge(m, src)
}
func (m *PacketID) XXX_Size() int {
	return m.Size()
}
func (m *PacketID) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketID.DiscardUnknown(m)
}

var xxx_messageInfo_PacketID proto.InternalMessageInfo

func (m *PacketID) GetConnID() uint64 {
	if m != nil {
		return m.ConnID
	}
	return 0
}

func (m *PacketID) GetSerialNo() uint32 {
	if m != nil {
		return m.SerialNo
	}
	return 0
}

type ProgramStatus struct {
	Type       ProgramStatusType `protobuf:"varint,1,req,name=type,enum=Common.ProgramStatusType" json:"type"`
	StrExtDesc string            `protobuf:"bytes,2,opt,name=strExtDesc" json:"strExtDesc"`
}

func (m *ProgramStatus) Reset()         { *m = ProgramStatus{} }
func (m *ProgramStatus) String() string { return proto.CompactTextString(m) }
func (*ProgramStatus) ProtoMessage()    {}
func (*ProgramStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{1}
}
func (m *ProgramStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgramStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgramStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgramStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramStatus.Merge(m, src)
}
func (m *ProgramStatus) XXX_Size() int {
	return m.Size()
}
func (m *ProgramStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramStatus proto.InternalMessageInfo

func (m *ProgramStatus) GetType() ProgramStatusType {
	if m != nil {
		return m.Type
	}
	return ProgramStatusType_ProgramStatusType_None
}

func (m *ProgramStatus) GetStrExtDesc() string {
	if m != nil {
		return m.StrExtDesc
	}
	return ""
}

func init() {
	proto.RegisterEnum("Common.RetType", RetType_name, RetType_value)
	proto.RegisterEnum("Common.PacketEncAlgo", PacketEncAlgo_name, PacketEncAlgo_value)
	proto.RegisterEnum("Common.ProtoFmt", ProtoFmt_name, ProtoFmt_value)
	proto.RegisterEnum("Common.ProgramStatusType", ProgramStatusType_name, ProgramStatusType_value)
	proto.RegisterType((*PacketID)(nil), "Common.PacketID")
	proto.RegisterType((*ProgramStatus)(nil), "Common.ProgramStatus")
}

func init() { proto.RegisterFile("Common.proto", fileDescriptor_ee72d9a89737215c) }

var fileDescriptor_ee72d9a89737215c = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x52, 0xd3, 0x50,
	0x14, 0xc6, 0x93, 0x50, 0xa1, 0x1c, 0x04, 0x2f, 0x97, 0x41, 0x8b, 0x60, 0xa8, 0x88, 0x5a, 0xbb,
	0xa8, 0x33, 0xea, 0xca, 0x1d, 0x4d, 0xda, 0x19, 0x18, 0xc4, 0x0e, 0x7f, 0x5c, 0xb8, 0xe9, 0x5c,
	0x92, 0x43, 0xbc, 0xd2, 0xdc, 0x9b, 0xb9, 0xb9, 0x51, 0xbb, 0x76, 0xeb, 0xc2, 0x07, 0xf0, 0x39,
	0x1c, 0x1f, 0xc0, 0x05, 0x4b, 0x96, 0xae, 0x1c, 0x07, 0x5e, 0xc0, 0x07, 0x70, 0xd4, 0x69, 0x9a,
	0x02, 0x1d, 0x52, 0xb2, 0x3a, 0xf9, 0xbe, 0xdf, 0x39, 0xf7, 0x9c, 0xdc, 0x13, 0xb8, 0xee, 0xc8,
	0x30, 0x94, 0xa2, 0x16, 0x29, 0xa9, 0x25, 0x1d, 0xef, 0xbf, 0xad, 0x6c, 0x40, 0xb1, 0xc5, 0xbc,
	0x43, 0xd4, 0xeb, 0x2e, 0x5d, 0x82, 0x71, 0x4f, 0x0a, 0xb1, 0xee, 0x96, 0xcc, 0xb2, 0x55, 0x29,
	0xd4, 0x0b, 0x47, 0x3f, 0x97, 0x8d, 0xed, 0x4c, 0xa3, 0x65, 0x28, 0xc6, 0xa8, 0x38, 0xeb, 0x6c,
	0xc9, 0x92, 0x55, 0xb6, 0x2a, 0xd3, 0x99, 0x7f, 0xa6, 0xae, 0xbc, 0x85, 0xe9, 0x96, 0x92, 0x81,
	0x62, 0xe1, 0x8e, 0x66, 0x3a, 0x89, 0xe9, 0x53, 0x28, 0xe8, 0x6e, 0x84, 0x69, 0xb9, 0x99, 0x27,
	0x0b, 0xb5, 0xac, 0x83, 0x21, 0x68, 0xb7, 0x1b, 0x61, 0x56, 0x29, 0x85, 0xe9, 0x2a, 0x40, 0xac,
	0x55, 0xe3, 0x83, 0x76, 0x31, 0xf6, 0x4a, 0x56, 0xd9, 0xac, 0x4c, 0x66, 0xfe, 0x05, 0xbd, 0xfa,
	0xd5, 0x84, 0x89, 0x6d, 0xd4, 0xbd, 0x6c, 0x3a, 0x07, 0x37, 0xb2, 0xb0, 0xbd, 0x93, 0x78, 0x1e,
	0xa2, 0x4f, 0x0c, 0xba, 0x08, 0x33, 0x03, 0xb1, 0xc9, 0x78, 0x07, 0x7d, 0xf2, 0x6f, 0xf0, 0x98,
	0x74, 0xe9, 0x3c, 0x63, 0x97, 0x87, 0xf8, 0x32, 0xd1, 0xe4, 0xcb, 0xb9, 0xbb, 0x0c, 0x74, 0xe0,
	0xba, 0x3c, 0x76, 0xa4, 0x10, 0xe8, 0x69, 0xf2, 0xed, 0x6f, 0x5e, 0xfa, 0x9e, 0x38, 0x14, 0xf2,
	0xbd, 0x20, 0xbf, 0xff, 0xe4, 0xb9, 0xeb, 0xe2, 0x1d, 0xeb, 0x70, 0x9f, 0x7c, 0x3a, 0x73, 0xab,
	0x1f, 0x4d, 0x98, 0xee, 0x7f, 0xf1, 0x86, 0xf0, 0xd6, 0x3a, 0x81, 0xa4, 0x8b, 0x70, 0x6b, 0x48,
	0x68, 0x37, 0x77, 0xd7, 0x1a, 0x3b, 0xed, 0x86, 0x53, 0x27, 0x46, 0xaf, 0x97, 0x61, 0x73, 0x4b,
	0x0a, 0xbc, 0x38, 0xca, 0x02, 0xcc, 0x0f, 0x03, 0x83, 0xdc, 0x11, 0x96, 0x53, 0x77, 0x88, 0x55,
	0x7d, 0x06, 0xc5, 0x56, 0x6f, 0x0f, 0x9a, 0xa1, 0xa6, 0xf3, 0x30, 0x3b, 0x88, 0xdb, 0x69, 0xb0,
	0x9f, 0x1c, 0x10, 0x83, 0xce, 0xa6, 0xb7, 0xd9, 0x97, 0x37, 0x62, 0x29, 0x88, 0x59, 0xfd, 0x3e,
	0x96, 0xa2, 0xc3, 0x97, 0x47, 0x6f, 0xc3, 0xcd, 0x4b, 0x62, 0xbf, 0x4d, 0x83, 0x2e, 0x41, 0xe9,
	0xb2, 0xb7, 0x29, 0x99, 0x8f, 0x3e, 0x31, 0x47, 0xb9, 0x01, 0x17, 0x01, 0xb1, 0xe8, 0x43, 0xb8,
	0x97, 0x53, 0x17, 0xd1, 0x6f, 0x71, 0xef, 0x15, 0x2a, 0x7e, 0xd0, 0x75, 0xa4, 0x8f, 0x64, 0x8c,
	0x3e, 0x82, 0xfb, 0x23, 0xc0, 0x37, 0x52, 0xe0, 0x05, 0xb4, 0x40, 0xef, 0xc2, 0x9d, 0x11, 0x27,
	0x66, 0x4b, 0x72, 0x2d, 0x1f, 0x69, 0x4a, 0xe5, 0xe1, 0x5e, 0xe4, 0x33, 0x8d, 0x64, 0x9c, 0x56,
	0xe1, 0x41, 0xde, 0x81, 0x71, 0xcc, 0x54, 0xd7, 0x65, 0x9a, 0xb5, 0x14, 0x46, 0x4c, 0xf5, 0xa6,
	0x98, 0xa0, 0x15, 0x58, 0xbd, 0x92, 0x7d, 0xc1, 0xe3, 0xb8, 0x47, 0x16, 0xf3, 0xe7, 0xdd, 0x13,
	0x6b, 0x81, 0x42, 0x74, 0x79, 0xec, 0x75, 0x18, 0x0f, 0x51, 0x91, 0xc9, 0x74, 0x61, 0x2e, 0x81,
	0xdb, 0xc8, 0xfc, 0x2e, 0x81, 0x2b, 0xda, 0xdf, 0x94, 0x81, 0x4c, 0x34, 0x99, 0xaa, 0x3f, 0x3f,
	0x3a, 0xb1, 0xcd, 0xe3, 0x13, 0xdb, 0xfc, 0x75, 0x62, 0x9b, 0x9f, 0x4f, 0x6d, 0xe3, 0xf8, 0xd4,
	0x36, 0x7e, 0x9c, 0xda, 0x06, 0xcc, 0x79, 0x32, 0xac, 0x1d, 0x24, 0x3a, 0xa9, 0xc9, 0x08, 0x05,
	0x8b, 0x78, 0x2d, 0xda, 0x7f, 0x3d, 0x15, 0xed, 0x07, 0xf2, 0x71, 0xff, 0xdf, 0xfd, 0x1f, 0x00,
	0x00, 0xff, 0xff, 0x8c, 0x93, 0xed, 0xfb, 0x46, 0x04, 0x00, 0x00,
}

func (m *PacketID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PacketID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PacketID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintCommon(dAtA, i, uint64(m.SerialNo))
	i--
	dAtA[i] = 0x10
	i = encodeVarintCommon(dAtA, i, uint64(m.ConnID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *ProgramStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgramStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgramStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.StrExtDesc)
	copy(dAtA[i:], m.StrExtDesc)
	i = encodeVarintCommon(dAtA, i, uint64(len(m.StrExtDesc)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintCommon(dAtA, i, uint64(m.Type))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintCommon(dAtA []byte, offset int, v uint64) int {
	offset -= sovCommon(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PacketID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovCommon(uint64(m.ConnID))
	n += 1 + sovCommon(uint64(m.SerialNo))
	return n
}

func (m *ProgramStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovCommon(uint64(m.Type))
	l = len(m.StrExtDesc)
	n += 1 + l + sovCommon(uint64(l))
	return n
}

func sovCommon(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCommon(x uint64) (n int) {
	return sovCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PacketID) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PacketID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PacketID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnID", wireType)
			}
			m.ConnID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SerialNo", wireType)
			}
			m.SerialNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SerialNo |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("connID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("serialNo")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgramStatus) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgramStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgramStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ProgramStatusType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrExtDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommon
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrExtDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCommon
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthCommon
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCommon
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCommon(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthCommon
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCommon = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCommon   = fmt.Errorf("proto: integer overflow")
)
