// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Notify.proto

package Notify

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	Common "pbgo/Common"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotifyType int32

const (
	NotifyType_NotifyType_None          NotifyType = 0
	NotifyType_NotifyType_GtwEvent      NotifyType = 1
	NotifyType_NotifyType_ProgramStatus NotifyType = 2
	NotifyType_NotifyType_ConnStatus    NotifyType = 3
	NotifyType_NotifyType_QotRight      NotifyType = 4
	NotifyType_NotifyType_APILevel      NotifyType = 5
)

var NotifyType_name = map[int32]string{
	0: "NotifyType_None",
	1: "NotifyType_GtwEvent",
	2: "NotifyType_ProgramStatus",
	3: "NotifyType_ConnStatus",
	4: "NotifyType_QotRight",
	5: "NotifyType_APILevel",
}

var NotifyType_value = map[string]int32{
	"NotifyType_None":          0,
	"NotifyType_GtwEvent":      1,
	"NotifyType_ProgramStatus": 2,
	"NotifyType_ConnStatus":    3,
	"NotifyType_QotRight":      4,
	"NotifyType_APILevel":      5,
}

func (x NotifyType) Enum() *NotifyType {
	p := new(NotifyType)
	*p = x
	return p
}

func (x NotifyType) String() string {
	return proto.EnumName(NotifyType_name, int32(x))
}

func (x *NotifyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotifyType_value, data, "NotifyType")
	if err != nil {
		return err
	}
	*x = NotifyType(value)
	return nil
}

func (NotifyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{0}
}

type GtwEventType int32

const (
	GtwEventType_GtwEventType_None                GtwEventType = 0
	GtwEventType_GtwEventType_LocalCfgLoadFailed  GtwEventType = 1
	GtwEventType_GtwEventType_APISvrRunFailed     GtwEventType = 2
	GtwEventType_GtwEventType_ForceUpdate         GtwEventType = 3
	GtwEventType_GtwEventType_LoginFailed         GtwEventType = 4
	GtwEventType_GtwEventType_UnAgreeDisclaimer   GtwEventType = 5
	GtwEventType_GtwEventType_NetCfgMissing       GtwEventType = 6
	GtwEventType_GtwEventType_KickedOut           GtwEventType = 7
	GtwEventType_GtwEventType_LoginPwdChanged     GtwEventType = 8
	GtwEventType_GtwEventType_BanLogin            GtwEventType = 9
	GtwEventType_GtwEventType_NeedPicVerifyCode   GtwEventType = 10
	GtwEventType_GtwEventType_NeedPhoneVerifyCode GtwEventType = 11
	GtwEventType_GtwEventType_AppDataNotExist     GtwEventType = 12
	GtwEventType_GtwEventType_NessaryDataMissing  GtwEventType = 13
	GtwEventType_GtwEventType_TradePwdChanged     GtwEventType = 14
	GtwEventType_GtwEventType_EnableDeviceLock    GtwEventType = 15
)

var GtwEventType_name = map[int32]string{
	0:  "GtwEventType_None",
	1:  "GtwEventType_LocalCfgLoadFailed",
	2:  "GtwEventType_APISvrRunFailed",
	3:  "GtwEventType_ForceUpdate",
	4:  "GtwEventType_LoginFailed",
	5:  "GtwEventType_UnAgreeDisclaimer",
	6:  "GtwEventType_NetCfgMissing",
	7:  "GtwEventType_KickedOut",
	8:  "GtwEventType_LoginPwdChanged",
	9:  "GtwEventType_BanLogin",
	10: "GtwEventType_NeedPicVerifyCode",
	11: "GtwEventType_NeedPhoneVerifyCode",
	12: "GtwEventType_AppDataNotExist",
	13: "GtwEventType_NessaryDataMissing",
	14: "GtwEventType_TradePwdChanged",
	15: "GtwEventType_EnableDeviceLock",
}

var GtwEventType_value = map[string]int32{
	"GtwEventType_None":                0,
	"GtwEventType_LocalCfgLoadFailed":  1,
	"GtwEventType_APISvrRunFailed":     2,
	"GtwEventType_ForceUpdate":         3,
	"GtwEventType_LoginFailed":         4,
	"GtwEventType_UnAgreeDisclaimer":   5,
	"GtwEventType_NetCfgMissing":       6,
	"GtwEventType_KickedOut":           7,
	"GtwEventType_LoginPwdChanged":     8,
	"GtwEventType_BanLogin":            9,
	"GtwEventType_NeedPicVerifyCode":   10,
	"GtwEventType_NeedPhoneVerifyCode": 11,
	"GtwEventType_AppDataNotExist":     12,
	"GtwEventType_NessaryDataMissing":  13,
	"GtwEventType_TradePwdChanged":     14,
	"GtwEventType_EnableDeviceLock":    15,
}

func (x GtwEventType) Enum() *GtwEventType {
	p := new(GtwEventType)
	*p = x
	return p
}

func (x GtwEventType) String() string {
	return proto.EnumName(GtwEventType_name, int32(x))
}

func (x *GtwEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GtwEventType_value, data, "GtwEventType")
	if err != nil {
		return err
	}
	*x = GtwEventType(value)
	return nil
}

func (GtwEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{1}
}

type GtwEvent struct {
	EventType int32  `protobuf:"varint,1,req,name=eventType" json:"eventType"`
	Desc      string `protobuf:"bytes,2,req,name=desc" json:"desc"`
}

func (m *GtwEvent) Reset()         { *m = GtwEvent{} }
func (m *GtwEvent) String() string { return proto.CompactTextString(m) }
func (*GtwEvent) ProtoMessage()    {}
func (*GtwEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{0}
}
func (m *GtwEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GtwEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GtwEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GtwEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GtwEvent.Merge(m, src)
}
func (m *GtwEvent) XXX_Size() int {
	return m.Size()
}
func (m *GtwEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GtwEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GtwEvent proto.InternalMessageInfo

func (m *GtwEvent) GetEventType() int32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *GtwEvent) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ProgramStatus struct {
	ProgramStatus *Common.ProgramStatus `protobuf:"bytes,1,req,name=programStatus" json:"programStatus,omitempty"`
}

func (m *ProgramStatus) Reset()         { *m = ProgramStatus{} }
func (m *ProgramStatus) String() string { return proto.CompactTextString(m) }
func (*ProgramStatus) ProtoMessage()    {}
func (*ProgramStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{1}
}
func (m *ProgramStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgramStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgramStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgramStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramStatus.Merge(m, src)
}
func (m *ProgramStatus) XXX_Size() int {
	return m.Size()
}
func (m *ProgramStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramStatus proto.InternalMessageInfo

func (m *ProgramStatus) GetProgramStatus() *Common.ProgramStatus {
	if m != nil {
		return m.ProgramStatus
	}
	return nil
}

type ConnectStatus struct {
	QotLogined bool `protobuf:"varint,1,req,name=qotLogined" json:"qotLogined"`
	TrdLogined bool `protobuf:"varint,2,req,name=trdLogined" json:"trdLogined"`
}

func (m *ConnectStatus) Reset()         { *m = ConnectStatus{} }
func (m *ConnectStatus) String() string { return proto.CompactTextString(m) }
func (*ConnectStatus) ProtoMessage()    {}
func (*ConnectStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{2}
}
func (m *ConnectStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConnectStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConnectStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConnectStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectStatus.Merge(m, src)
}
func (m *ConnectStatus) XXX_Size() int {
	return m.Size()
}
func (m *ConnectStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectStatus proto.InternalMessageInfo

func (m *ConnectStatus) GetQotLogined() bool {
	if m != nil {
		return m.QotLogined
	}
	return false
}

func (m *ConnectStatus) GetTrdLogined() bool {
	if m != nil {
		return m.TrdLogined
	}
	return false
}

type QotRight struct {
	HkQotRight          int32 `protobuf:"varint,4,req,name=hkQotRight" json:"hkQotRight"`
	UsQotRight          int32 `protobuf:"varint,5,req,name=usQotRight" json:"usQotRight"`
	CnQotRight          int32 `protobuf:"varint,6,req,name=cnQotRight" json:"cnQotRight"`
	HkOptionQotRight    int32 `protobuf:"varint,7,opt,name=hkOptionQotRight" json:"hkOptionQotRight"`
	HasUSOptionQotRight bool  `protobuf:"varint,8,opt,name=hasUSOptionQotRight" json:"hasUSOptionQotRight"`
	HkFutureQotRight    int32 `protobuf:"varint,9,opt,name=hkFutureQotRight" json:"hkFutureQotRight"`
}

func (m *QotRight) Reset()         { *m = QotRight{} }
func (m *QotRight) String() string { return proto.CompactTextString(m) }
func (*QotRight) ProtoMessage()    {}
func (*QotRight) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{3}
}
func (m *QotRight) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QotRight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QotRight.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QotRight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QotRight.Merge(m, src)
}
func (m *QotRight) XXX_Size() int {
	return m.Size()
}
func (m *QotRight) XXX_DiscardUnknown() {
	xxx_messageInfo_QotRight.DiscardUnknown(m)
}

var xxx_messageInfo_QotRight proto.InternalMessageInfo

func (m *QotRight) GetHkQotRight() int32 {
	if m != nil {
		return m.HkQotRight
	}
	return 0
}

func (m *QotRight) GetUsQotRight() int32 {
	if m != nil {
		return m.UsQotRight
	}
	return 0
}

func (m *QotRight) GetCnQotRight() int32 {
	if m != nil {
		return m.CnQotRight
	}
	return 0
}

func (m *QotRight) GetHkOptionQotRight() int32 {
	if m != nil {
		return m.HkOptionQotRight
	}
	return 0
}

func (m *QotRight) GetHasUSOptionQotRight() bool {
	if m != nil {
		return m.HasUSOptionQotRight
	}
	return false
}

func (m *QotRight) GetHkFutureQotRight() int32 {
	if m != nil {
		return m.HkFutureQotRight
	}
	return 0
}

type APILevel struct {
	ApiLevel string `protobuf:"bytes,3,req,name=apiLevel" json:"apiLevel"`
}

func (m *APILevel) Reset()         { *m = APILevel{} }
func (m *APILevel) String() string { return proto.CompactTextString(m) }
func (*APILevel) ProtoMessage()    {}
func (*APILevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{4}
}
func (m *APILevel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APILevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APILevel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APILevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APILevel.Merge(m, src)
}
func (m *APILevel) XXX_Size() int {
	return m.Size()
}
func (m *APILevel) XXX_DiscardUnknown() {
	xxx_messageInfo_APILevel.DiscardUnknown(m)
}

var xxx_messageInfo_APILevel proto.InternalMessageInfo

func (m *APILevel) GetApiLevel() string {
	if m != nil {
		return m.ApiLevel
	}
	return ""
}

type S2C struct {
	Type          int32          `protobuf:"varint,1,req,name=type" json:"type"`
	Event         *GtwEvent      `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	ProgramStatus *ProgramStatus `protobuf:"bytes,3,opt,name=programStatus" json:"programStatus,omitempty"`
	ConnectStatus *ConnectStatus `protobuf:"bytes,4,opt,name=connectStatus" json:"connectStatus,omitempty"`
	QotRight      *QotRight      `protobuf:"bytes,5,opt,name=qotRight" json:"qotRight,omitempty"`
	ApiLevel      *APILevel      `protobuf:"bytes,6,opt,name=apiLevel" json:"apiLevel,omitempty"`
}

func (m *S2C) Reset()         { *m = S2C{} }
func (m *S2C) String() string { return proto.CompactTextString(m) }
func (*S2C) ProtoMessage()    {}
func (*S2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{5}
}
func (m *S2C) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C.Merge(m, src)
}
func (m *S2C) XXX_Size() int {
	return m.Size()
}
func (m *S2C) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C.DiscardUnknown(m)
}

var xxx_messageInfo_S2C proto.InternalMessageInfo

func (m *S2C) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *S2C) GetEvent() *GtwEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *S2C) GetProgramStatus() *ProgramStatus {
	if m != nil {
		return m.ProgramStatus
	}
	return nil
}

func (m *S2C) GetConnectStatus() *ConnectStatus {
	if m != nil {
		return m.ConnectStatus
	}
	return nil
}

func (m *S2C) GetQotRight() *QotRight {
	if m != nil {
		return m.QotRight
	}
	return nil
}

func (m *S2C) GetApiLevel() *APILevel {
	if m != nil {
		return m.ApiLevel
	}
	return nil
}

type Response struct {
	RetType *int32 `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg"`
	ErrCode int32  `protobuf:"varint,3,opt,name=errCode" json:"errCode"`
	S2C     *S2C   `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb08ef5f3e7048c1, []int{6}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return m.Size()
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

const Default_Response_RetType int32 = -400

func (m *Response) GetRetType() int32 {
	if m != nil && m.RetType != nil {
		return *m.RetType
	}
	return Default_Response_RetType
}

func (m *Response) GetRetMsg() string {
	if m != nil {
		return m.RetMsg
	}
	return ""
}

func (m *Response) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *Response) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

func init() {
	proto.RegisterEnum("Notify.NotifyType", NotifyType_name, NotifyType_value)
	proto.RegisterEnum("Notify.GtwEventType", GtwEventType_name, GtwEventType_value)
	proto.RegisterType((*GtwEvent)(nil), "Notify.GtwEvent")
	proto.RegisterType((*ProgramStatus)(nil), "Notify.ProgramStatus")
	proto.RegisterType((*ConnectStatus)(nil), "Notify.ConnectStatus")
	proto.RegisterType((*QotRight)(nil), "Notify.QotRight")
	proto.RegisterType((*APILevel)(nil), "Notify.APILevel")
	proto.RegisterType((*S2C)(nil), "Notify.S2C")
	proto.RegisterType((*Response)(nil), "Notify.Response")
}

func init() { proto.RegisterFile("Notify.proto", fileDescriptor_cb08ef5f3e7048c1) }

var fileDescriptor_cb08ef5f3e7048c1 = []byte{
	// 813 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x63, 0xe7, 0x47, 0xdd, 0x97, 0x96, 0x1d, 0xa6, 0x2a, 0x84, 0xaa, 0xeb, 0x0d, 0x61,
	0x85, 0xaa, 0xd5, 0x12, 0xaa, 0x08, 0x71, 0x58, 0x4e, 0x6d, 0xda, 0xc2, 0x8a, 0x6c, 0x36, 0x38,
	0x5b, 0x0e, 0x70, 0x40, 0x53, 0xfb, 0xc5, 0xb1, 0x9a, 0x78, 0xbc, 0xe3, 0x49, 0x97, 0xfe, 0x05,
	0x5c, 0x39, 0x22, 0x21, 0x8e, 0xfc, 0x2f, 0x7b, 0xdc, 0x23, 0x27, 0x84, 0xda, 0x7f, 0x04, 0xd9,
	0xf1, 0x24, 0x33, 0x31, 0xe2, 0xe6, 0xf9, 0xbe, 0xcf, 0x9b, 0xf7, 0xde, 0x77, 0x5e, 0x02, 0x3b,
	0x43, 0x2e, 0xa3, 0xc9, 0x6d, 0x37, 0x11, 0x5c, 0x72, 0xda, 0x58, 0x9e, 0x0e, 0x76, 0xfa, 0x7c,
	0x3e, 0xe7, 0xf1, 0x52, 0xed, 0x7c, 0x03, 0xce, 0xd7, 0xf2, 0xcd, 0xf9, 0x0d, 0xc6, 0x92, 0x76,
	0x60, 0x1b, 0xb3, 0x8f, 0x57, 0xb7, 0x09, 0xb6, 0xac, 0xb6, 0x7d, 0x54, 0x3f, 0xad, 0xbd, 0xfd,
	0xfb, 0x51, 0xc5, 0x5b, 0xcb, 0xb4, 0x05, 0xb5, 0x00, 0x53, 0xbf, 0x65, 0xb7, 0xed, 0xa3, 0xed,
	0x22, 0x9c, 0x2b, 0x9d, 0x01, 0xec, 0x8e, 0x04, 0x0f, 0x05, 0x9b, 0x8f, 0x25, 0x93, 0x8b, 0x94,
	0x7e, 0x05, 0xbb, 0x89, 0x2e, 0xe4, 0x57, 0x36, 0x7b, 0xfb, 0xdd, 0xa2, 0x01, 0x83, 0xf6, 0x4c,
	0xb6, 0xf3, 0x23, 0xec, 0xf6, 0x79, 0x1c, 0xa3, 0x2f, 0x8b, 0xdb, 0x1e, 0x03, 0xbc, 0xe6, 0x72,
	0xc0, 0xc3, 0x28, 0xc6, 0x20, 0xbf, 0xca, 0x29, 0xca, 0x6b, 0x7a, 0x46, 0x49, 0x11, 0x28, 0xca,
	0xd6, 0xa9, 0xb5, 0xde, 0xf9, 0xcd, 0x06, 0xe7, 0x3b, 0x2e, 0xbd, 0x28, 0x9c, 0xca, 0x2c, 0x65,
	0x7a, 0xad, 0x4e, 0xad, 0x9a, 0x36, 0xb6, 0xa6, 0x67, 0xd4, 0x22, 0x5d, 0x51, 0x75, 0x9d, 0x5a,
	0xeb, 0x19, 0xe5, 0xc7, 0x2b, 0xaa, 0xa1, 0x53, 0x6b, 0x9d, 0x1e, 0x03, 0x99, 0x5e, 0xbf, 0x4c,
	0x64, 0xc4, 0xd7, 0xec, 0x56, 0xdb, 0x5a, 0xb1, 0xa5, 0x28, 0xfd, 0x12, 0xf6, 0xa6, 0x2c, 0xbd,
	0x1c, 0x6f, 0x24, 0x39, 0x6d, 0x6b, 0x35, 0xdf, 0x7f, 0x01, 0xcb, 0x4a, 0x17, 0x0b, 0xb9, 0x10,
	0xb8, 0x4a, 0xda, 0x36, 0x2b, 0x99, 0xd1, 0xce, 0x53, 0x70, 0x4e, 0x46, 0xcf, 0x07, 0x78, 0x83,
	0x33, 0xda, 0x06, 0x87, 0x25, 0x51, 0xfe, 0xdd, 0xaa, 0x6a, 0xef, 0xbd, 0x52, 0x3b, 0x7f, 0xd8,
	0x50, 0x1d, 0xf7, 0xfa, 0xd9, 0x56, 0xc8, 0xcd, 0xa5, 0xc9, 0x15, 0xfa, 0x29, 0xd4, 0xf3, 0xe5,
	0x69, 0xd9, 0x6d, 0xeb, 0xa8, 0xd9, 0x23, 0xdd, 0x62, 0x27, 0xd5, 0xd2, 0x79, 0xcb, 0x70, 0x79,
	0x59, 0xaa, 0x39, 0xbf, 0xaf, 0xf8, 0xff, 0x5b, 0x96, 0x2c, 0xd9, 0xd7, 0x97, 0xa5, 0x55, 0x33,
	0x93, 0x8d, 0x4d, 0xf2, 0x4c, 0x96, 0x3e, 0x05, 0xe7, 0xf5, 0xfa, 0x5d, 0x8d, 0x26, 0x95, 0x2b,
	0xde, 0x8a, 0xc8, 0xe8, 0x95, 0x27, 0x0d, 0x93, 0x56, 0xbe, 0x69, 0xfe, 0xfc, 0x62, 0x81, 0xe3,
	0x61, 0x9a, 0xf0, 0x38, 0x45, 0xea, 0xc2, 0x96, 0x40, 0xed, 0xc7, 0xf5, 0xac, 0xf6, 0xd9, 0x17,
	0xc7, 0xc7, 0x9e, 0x12, 0xe9, 0x21, 0x34, 0x04, 0xca, 0x17, 0x69, 0x98, 0x7b, 0xa5, 0xcc, 0x2e,
	0xb4, 0x2c, 0x1b, 0x85, 0xe8, 0xf3, 0x00, 0x73, 0x6b, 0x94, 0xcb, 0x4a, 0xa4, 0x0f, 0xa1, 0x9a,
	0xf6, 0xfc, 0x62, 0xf2, 0xa6, 0xea, 0x69, 0xdc, 0xeb, 0x7b, 0x99, 0xfe, 0xe4, 0x4f, 0x0b, 0x60,
	0xa9, 0xe5, 0xb5, 0xf6, 0xe0, 0xc1, 0xfa, 0xf4, 0xd3, 0x90, 0xc7, 0x48, 0x2a, 0xf4, 0x43, 0xd8,
	0xd3, 0x44, 0xf5, 0x42, 0xc4, 0xa2, 0x87, 0xd0, 0xd2, 0x02, 0xc6, 0x53, 0x10, 0x9b, 0x7e, 0x04,
	0xfb, 0x5a, 0x34, 0xf3, 0xba, 0x08, 0x55, 0x37, 0x6e, 0x54, 0x76, 0x92, 0xda, 0x46, 0x40, 0x39,
	0x47, 0xea, 0x4f, 0x7e, 0xaf, 0xc1, 0x8e, 0xaa, 0x9c, 0x77, 0xba, 0x0f, 0xef, 0xeb, 0x67, 0xd5,
	0xeb, 0x27, 0xf0, 0xc8, 0x90, 0x07, 0xdc, 0x67, 0xb3, 0xfe, 0x24, 0x1c, 0x70, 0x16, 0x5c, 0xb0,
	0x68, 0x86, 0x01, 0xb1, 0x68, 0x1b, 0x0e, 0x0d, 0xe8, 0x64, 0xf4, 0x7c, 0x7c, 0x23, 0xbc, 0x45,
	0x5c, 0x10, 0x76, 0x36, 0x99, 0x41, 0x5c, 0x70, 0xe1, 0xe3, 0x65, 0x12, 0x30, 0x89, 0xa4, 0x5a,
	0x8a, 0xe6, 0xff, 0x1f, 0x45, 0x6e, 0x8d, 0x76, 0xc0, 0x35, 0xa2, 0x97, 0xf1, 0x49, 0x28, 0x10,
	0xcf, 0xa2, 0xd4, 0x9f, 0xb1, 0x68, 0x8e, 0x82, 0xd4, 0xa9, 0x0b, 0x07, 0x66, 0xf7, 0x28, 0xfb,
	0x93, 0xf0, 0x45, 0x94, 0xa6, 0x51, 0x1c, 0x92, 0x06, 0x3d, 0x80, 0x0f, 0x8c, 0xf8, 0xb7, 0x91,
	0x7f, 0x8d, 0xc1, 0xcb, 0x85, 0x24, 0x5b, 0xa5, 0xee, 0xf3, 0xea, 0xa3, 0x37, 0x41, 0x7f, 0xca,
	0xe2, 0x10, 0x03, 0xe2, 0x64, 0xce, 0x1b, 0xc4, 0x29, 0x8b, 0x73, 0x88, 0x6c, 0x97, 0x9a, 0x1b,
	0x22, 0x06, 0xa3, 0xc8, 0xff, 0x1e, 0x45, 0x34, 0xb9, 0xcd, 0x16, 0x86, 0x00, 0x7d, 0x0c, 0xed,
	0x32, 0x33, 0xe5, 0x31, 0x6a, 0x54, 0xb3, 0x6c, 0x62, 0x92, 0x9c, 0x31, 0xc9, 0x86, 0x5c, 0x9e,
	0xff, 0x1c, 0xa5, 0x92, 0xec, 0x94, 0xde, 0x62, 0x88, 0x69, 0xca, 0xc4, 0x6d, 0x46, 0xa9, 0x49,
	0x77, 0x4b, 0xd7, 0xbc, 0x12, 0x2c, 0x40, 0x6d, 0x9a, 0xf7, 0xe8, 0xc7, 0xf0, 0xd0, 0x20, 0xce,
	0x63, 0x76, 0x35, 0xc3, 0x33, 0xbc, 0x89, 0x7c, 0x1c, 0x70, 0xff, 0x9a, 0x3c, 0x38, 0x7d, 0xf6,
	0xf6, 0xce, 0xb5, 0xde, 0xdd, 0xb9, 0xd6, 0x3f, 0x77, 0xae, 0xf5, 0xeb, 0xbd, 0x5b, 0x79, 0x77,
	0xef, 0x56, 0xfe, 0xba, 0x77, 0x2b, 0xb0, 0xe7, 0xf3, 0x79, 0x77, 0xb2, 0x90, 0x8b, 0x2e, 0x4f,
	0x30, 0x66, 0x49, 0xd4, 0x4d, 0xae, 0x7e, 0x68, 0x26, 0x57, 0x21, 0xff, 0x7c, 0xb9, 0x68, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x3d, 0x95, 0xdd, 0x0e, 0x07, 0x00, 0x00,
}

func (m *GtwEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GtwEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GtwEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Desc)
	copy(dAtA[i:], m.Desc)
	i = encodeVarintNotify(dAtA, i, uint64(len(m.Desc)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintNotify(dAtA, i, uint64(m.EventType))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *ProgramStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgramStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgramStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ProgramStatus == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("programStatus")
	} else {
		{
			size, err := m.ProgramStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConnectStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConnectStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConnectStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.TrdLogined {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	i--
	if m.QotLogined {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *QotRight) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QotRight) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QotRight) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintNotify(dAtA, i, uint64(m.HkFutureQotRight))
	i--
	dAtA[i] = 0x48
	i--
	if m.HasUSOptionQotRight {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x40
	i = encodeVarintNotify(dAtA, i, uint64(m.HkOptionQotRight))
	i--
	dAtA[i] = 0x38
	i = encodeVarintNotify(dAtA, i, uint64(m.CnQotRight))
	i--
	dAtA[i] = 0x30
	i = encodeVarintNotify(dAtA, i, uint64(m.UsQotRight))
	i--
	dAtA[i] = 0x28
	i = encodeVarintNotify(dAtA, i, uint64(m.HkQotRight))
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}

func (m *APILevel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APILevel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APILevel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.ApiLevel)
	copy(dAtA[i:], m.ApiLevel)
	i = encodeVarintNotify(dAtA, i, uint64(len(m.ApiLevel)))
	i--
	dAtA[i] = 0x1a
	return len(dAtA) - i, nil
}

func (m *S2C) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ApiLevel != nil {
		{
			size, err := m.ApiLevel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.QotRight != nil {
		{
			size, err := m.QotRight.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ConnectStatus != nil {
		{
			size, err := m.ConnectStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ProgramStatus != nil {
		{
			size, err := m.ProgramStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Event != nil {
		{
			size, err := m.Event.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintNotify(dAtA, i, uint64(m.Type))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.S2C != nil {
		{
			size, err := m.S2C.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNotify(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintNotify(dAtA, i, uint64(m.ErrCode))
	i--
	dAtA[i] = 0x18
	i -= len(m.RetMsg)
	copy(dAtA[i:], m.RetMsg)
	i = encodeVarintNotify(dAtA, i, uint64(len(m.RetMsg)))
	i--
	dAtA[i] = 0x12
	if m.RetType == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("retType")
	} else {
		i = encodeVarintNotify(dAtA, i, uint64(*m.RetType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintNotify(dAtA []byte, offset int, v uint64) int {
	offset -= sovNotify(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GtwEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovNotify(uint64(m.EventType))
	l = len(m.Desc)
	n += 1 + l + sovNotify(uint64(l))
	return n
}

func (m *ProgramStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProgramStatus != nil {
		l = m.ProgramStatus.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	return n
}

func (m *ConnectStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 2
	return n
}

func (m *QotRight) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovNotify(uint64(m.HkQotRight))
	n += 1 + sovNotify(uint64(m.UsQotRight))
	n += 1 + sovNotify(uint64(m.CnQotRight))
	n += 1 + sovNotify(uint64(m.HkOptionQotRight))
	n += 2
	n += 1 + sovNotify(uint64(m.HkFutureQotRight))
	return n
}

func (m *APILevel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ApiLevel)
	n += 1 + l + sovNotify(uint64(l))
	return n
}

func (m *S2C) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovNotify(uint64(m.Type))
	if m.Event != nil {
		l = m.Event.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	if m.ProgramStatus != nil {
		l = m.ProgramStatus.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	if m.ConnectStatus != nil {
		l = m.ConnectStatus.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	if m.QotRight != nil {
		l = m.QotRight.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	if m.ApiLevel != nil {
		l = m.ApiLevel.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	return n
}

func (m *Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetType != nil {
		n += 1 + sovNotify(uint64(*m.RetType))
	}
	l = len(m.RetMsg)
	n += 1 + l + sovNotify(uint64(l))
	n += 1 + sovNotify(uint64(m.ErrCode))
	if m.S2C != nil {
		l = m.S2C.Size()
		n += 1 + l + sovNotify(uint64(l))
	}
	return n
}

func sovNotify(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNotify(x uint64) (n int) {
	return sovNotify(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GtwEvent) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GtwEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GtwEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventType", wireType)
			}
			m.EventType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("eventType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("desc")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgramStatus) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgramStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgramStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgramStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProgramStatus == nil {
				m.ProgramStatus = &Common.ProgramStatus{}
			}
			if err := m.ProgramStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("programStatus")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConnectStatus) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConnectStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConnectStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QotLogined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QotLogined = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrdLogined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TrdLogined = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("qotLogined")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("trdLogined")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QotRight) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QotRight: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QotRight: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HkQotRight", wireType)
			}
			m.HkQotRight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HkQotRight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsQotRight", wireType)
			}
			m.UsQotRight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsQotRight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CnQotRight", wireType)
			}
			m.CnQotRight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CnQotRight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HkOptionQotRight", wireType)
			}
			m.HkOptionQotRight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HkOptionQotRight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasUSOptionQotRight", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasUSOptionQotRight = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HkFutureQotRight", wireType)
			}
			m.HkFutureQotRight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HkFutureQotRight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("hkQotRight")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("usQotRight")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cnQotRight")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APILevel) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APILevel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APILevel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("apiLevel")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Event == nil {
				m.Event = &GtwEvent{}
			}
			if err := m.Event.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgramStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProgramStatus == nil {
				m.ProgramStatus = &ProgramStatus{}
			}
			if err := m.ProgramStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ConnectStatus == nil {
				m.ConnectStatus = &ConnectStatus{}
			}
			if err := m.ConnectStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QotRight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QotRight == nil {
				m.QotRight = &QotRight{}
			}
			if err := m.QotRight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiLevel == nil {
				m.ApiLevel = &APILevel{}
			}
			if err := m.ApiLevel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Response) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetType = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RetMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field S2C", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNotify
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNotify
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.S2C == nil {
				m.S2C = &S2C{}
			}
			if err := m.S2C.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNotify(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotify
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("retType")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNotify(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNotify
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotify
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNotify
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthNotify
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowNotify
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipNotify(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthNotify
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthNotify = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNotify   = fmt.Errorf("proto: integer overflow")
)
